default:
  image: python:3.8

variables:
  DOCKER_REGISTRY: registry.gitlab.com
  DOCKER_IMAGE_BASE_NAME: registry.gitlab.com/laboratorio-di-progettazione-trenobot/trenobot-laboratorio-di-progettazione/

stages:
  - pre_test
  - test
  - build
  - release
  - deploy

check_formatting:
  stage: pre_test
  script:
    - pip install -r requirements.txt
    - echo "Testing..."
    - black --check backend/ frontend/ telegram-bot/

smoke_test:
  stage: pre_test
  image: docker:stable
  services:
    - docker:dind
  script:
    - apk add --no-cache docker-compose
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $DOCKER_REGISTRY

    - docker-compose build backend frontend telegram-bot
    - docker-compose up -d backend frontend telegram-bot
    - docker-compose stop

    - docker tag ${DOCKER_IMAGE_BASE_NAME}trenobot_backend ${DOCKER_IMAGE_BASE_NAME}trenobot_backend:test
    - docker push ${DOCKER_IMAGE_BASE_NAME}trenobot_backend:test

    - docker tag ${DOCKER_IMAGE_BASE_NAME}trenobot_frontend ${DOCKER_IMAGE_BASE_NAME}trenobot_frontend:test
    - docker push ${DOCKER_IMAGE_BASE_NAME}trenobot_frontend:test

    - docker tag ${DOCKER_IMAGE_BASE_NAME}trenobot_telegram-bot ${DOCKER_IMAGE_BASE_NAME}trenobot_telegram-bot:test
    - docker push ${DOCKER_IMAGE_BASE_NAME}trenobot_telegram-bot:test

test_unit_backend:
  stage: test
  image: ${DOCKER_IMAGE_BASE_NAME}trenobot_backend:test
  script:
    - cd /backend
    - pytest

test_unit_frontend:
  stage: test
  image: ${DOCKER_IMAGE_BASE_NAME}trenobot_frontend:test
  script:
    - cd /frontend
    - pytest

test_unit_telegram-bot:
  stage: test
  image: ${DOCKER_IMAGE_BASE_NAME}trenobot_telegram-bot:test
  script:
    - cd /telegram-bot
    - pytest

# build a development/latest-commit version of the image and push it tagging it as the first 8 chars of the commit sha
build_dev:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  script:
    - apk add --no-cache docker-compose
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $DOCKER_REGISTRY
    - docker-compose build backend frontend telegram-bot

    - docker tag ${DOCKER_IMAGE_BASE_NAME}trenobot_backend ${DOCKER_IMAGE_BASE_NAME}trenobot_backend:${CI_COMMIT_SHA:0:8}
    - docker push ${DOCKER_IMAGE_BASE_NAME}trenobot_backend:${CI_COMMIT_SHA:0:8}

    - docker tag ${DOCKER_IMAGE_BASE_NAME}trenobot_frontend ${DOCKER_IMAGE_BASE_NAME}trenobot_frontend:${CI_COMMIT_SHA:0:8}
    - docker push ${DOCKER_IMAGE_BASE_NAME}trenobot_frontend:${CI_COMMIT_SHA:0:8}

    - docker tag ${DOCKER_IMAGE_BASE_NAME}trenobot_telegram-bot ${DOCKER_IMAGE_BASE_NAME}trenobot_telegram-bot:${CI_COMMIT_SHA:0:8}
    - docker push ${DOCKER_IMAGE_BASE_NAME}trenobot_telegram-bot:${CI_COMMIT_SHA:0:8}

# tag and push a release image available to the latest:tag
release_image:
  stage: release
  only:
    - master
    - /^sprint\d+$/
  image: docker:stable
  services:
    - docker:dind
  script:
    - apk add --no-cache docker-compose
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $DOCKER_REGISTRY

    - docker pull ${DOCKER_IMAGE_BASE_NAME}trenobot_backend:${CI_COMMIT_SHA:0:8}
    - docker tag ${DOCKER_IMAGE_BASE_NAME}trenobot_backend:${CI_COMMIT_SHA:0:8} ${DOCKER_IMAGE_BASE_NAME}trenobot_backend:${CI_COMMIT_REF_NAME}
    - docker push ${DOCKER_IMAGE_BASE_NAME}trenobot_backend:${CI_COMMIT_REF_NAME}

    - docker pull ${DOCKER_IMAGE_BASE_NAME}trenobot_frontend:${CI_COMMIT_SHA:0:8}
    - docker tag ${DOCKER_IMAGE_BASE_NAME}trenobot_frontend:${CI_COMMIT_SHA:0:8} ${DOCKER_IMAGE_BASE_NAME}trenobot_frontend:${CI_COMMIT_REF_NAME}
    - docker push ${DOCKER_IMAGE_BASE_NAME}trenobot_frontend:${CI_COMMIT_REF_NAME}

    - docker pull ${DOCKER_IMAGE_BASE_NAME}trenobot_telegram-bot:${CI_COMMIT_SHA:0:8}
    - docker tag ${DOCKER_IMAGE_BASE_NAME}trenobot_telegram-bot:${CI_COMMIT_SHA:0:8} ${DOCKER_IMAGE_BASE_NAME}trenobot_telegram-bot:${CI_COMMIT_REF_NAME}
    - docker push ${DOCKER_IMAGE_BASE_NAME}trenobot_telegram-bot:${CI_COMMIT_REF_NAME}

deploy:
  stage: deploy
  only:
    - master
    - /^sprint\d+$/
  script:
    - echo "Deploying..."
